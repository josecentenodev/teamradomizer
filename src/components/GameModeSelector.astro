---
interface Props {
    selectedMode: string;
}

const { selectedMode = 'aram' } = Astro.props;
---

<div class="mb-8">
    <h2 class="text-xl font-semibold text-gray-800 mb-4 text-center">Selecciona el modo de juego</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 max-w-lg mx-auto">
        <button
            class={`p-4 rounded-lg border-2 transition-all ${
                selectedMode === 'aram'
                    ? 'border-violet-600 bg-violet-50 text-violet-700'
                    : 'border-gray-200 hover:border-violet-400'
            }`}
            data-mode="aram"
        >
            <h3 class="font-bold mb-2">ARAM</h3>
            <p class="text-sm text-gray-600">Todos Random, Todos Mid</p>
        </button>
        <button
            class={`p-4 rounded-lg border-2 transition-all ${
                selectedMode === 'summoners-rift'
                    ? 'border-violet-600 bg-violet-50 text-violet-700'
                    : 'border-gray-200 hover:border-violet-400'
            }`}
            data-mode="summoners-rift"
        >
            <h3 class="font-bold mb-2">Grieta del Invocador</h3>
            <p class="text-sm text-gray-600">Mapa cl√°sico 5v5</p>
        </button>
    </div>
</div>

<script>
    const buttons = document.querySelectorAll('[data-mode]');
    let currentMode = 'aram';

    buttons.forEach(button => {
        button.addEventListener('click', () => {
            const mode = button.getAttribute('data-mode');
            if (mode) {
                currentMode = mode;
                // Update UI
                buttons.forEach(btn => {
                    btn.classList.remove('border-violet-600', 'bg-violet-50', 'text-violet-700');
                    btn.classList.add('border-gray-200');
                });
                button.classList.remove('border-gray-200');
                button.classList.add('border-violet-600', 'bg-violet-50', 'text-violet-700');
                
                // Dispatch event for parent components
                window.dispatchEvent(new CustomEvent('gameModeChanged', { detail: { mode } }));
            }
        });
    });
</script> 